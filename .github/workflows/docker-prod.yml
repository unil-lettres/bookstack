name: docker
on:
  schedule:
    - cron: '0 1 * * 1'  # Every Monday at 1am
  push:
    branches:
      - "main"
    tags:
      - "*"
permissions: read-all

jobs:
  evaluate-jobs:
    name: Determine jobs execution
    runs-on: ubuntu-latest
    outputs:
      run-merge-build: ${{ steps.determine.outputs.run-merge-build }}
      run-commit: ${{ steps.determine.outputs.run-commit }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Determine jobs execution
        id: determine
        uses: unil-lettres/actions/job-execution@main
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerhub_repository: ${{ vars.DOCKERHUB_REPOSITORY }}

  build:
    name: Build app (${{ matrix.arch }})
    if: needs.evaluate-jobs.outputs.run-merge-build == 'true'
    runs-on: ${{ matrix.os }}
    needs: [evaluate-jobs]
    strategy:
      matrix:
        include:
          - { arch: linux/amd64, os: ubuntu-latest }
          - { arch: linux/arm64, os: ubuntu-24.04-arm }

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Build image
        uses: unil-lettres/actions/docker-build@main
        with:
          dockerfile: ./Dockerfile
          platform: ${{ matrix.arch }}
          image_repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  merge:
    name: Merge
    if: needs.evaluate-jobs.outputs.run-merge-build == 'true'
    runs-on: ubuntu-latest
    needs: [evaluate-jobs, build]
    outputs:
      tag: ${{ steps.merge.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Read VERSION file
        id: version
        run: echo "tag=v$(cat VERSION | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Merge service
        id: merge
        uses: unil-lettres/actions/docker-merge-prod@main
        with:
          tag: ${{ steps.version.outputs.tag }}
          image_repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  commit:
    name: Commit Image Tag
    if: needs.evaluate-jobs.outputs.run-commit == 'true'
    runs-on: ubuntu-latest
    needs: [evaluate-jobs, merge]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Update image
        uses: unil-lettres/actions/commit-version@main
        with:
          file_path: wlett/values-prod.yaml
          versions: "${{ needs.merge.outputs.tag }}"
          version_keys: "app_image_tag"
          token: ${{ secrets.PAT_TOKEN }}
          repository: unil-lettres/k8s
          branch: main

  update-description:
    name: Update Description
    runs-on: ubuntu-latest
    needs: [merge]
    if: success()
    continue-on-error: false

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Update description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ vars.DOCKERHUB_REPOSITORY }}
